<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhiot.oc.order.mapper.BaseOrderMapper">
    <insert id="insert" parameterType="com.lhiot.oc.order.entity.BaseOrder" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO base_order (order_code,application_type,user_id,nickname,total_amount,delivery_amount,coupon_amount,amount_payable,receiving_way,status
        ,receive_user,contact_phone,address,remark,delivery_end_at,hd_order_code,deliver_at,allow_refund,create_at,order_type,user_phone)
        VALUE (#{code},#{applicationType},#{userId},#{nickname},#{totalAmount},#{deliveryAmount},#{couponAmount},#{amountPayable},#{receivingWay},#{status}
        ,#{receiveUser},#{contactPhone},#{address},#{remark},#{deliveryEndAt},#{hdOrderCode},#{deliverAt},#{allowRefund},#{createAt},#{orderType},#{userPhone})
    </insert>

    <update id="updateOrderStatusById" parameterType="com.lhiot.oc.order.entity.BaseOrder">
        update base_order set status = #{status}
        where id=#{id}
    </update>

    <update id="updateHdOrderCodeById" parameterType="com.lhiot.oc.order.entity.BaseOrder">
        update base_order set hd_order_code = #{hdOrderCode}
        where id=#{id}
    </update>


    <select id="selectById" parameterType="long" resultType="com.lhiot.oc.order.model.OrderDetailResult">
        SELECT
        <include refid="columns"/>
        FROM base_order
        WHERE id = #{0}
    </select>

    <select id="selectByCode" parameterType="String" resultType="com.lhiot.oc.order.model.OrderDetailResult">
        SELECT
        <include refid="columns"/>
        FROM base_order
        WHERE order_code = #{0}
    </select>

    <select id="selectListByUserIdAndParam" resultMap="orderDetails" parameterType="map">
        select a.id, order_code as code, application_type, user_id, order_type, nickname, total_amount, delivery_amount,
        coupon_amount,
        amount_payable, receiving_way, status, receive_user, contact_phone, address, remark, delivery_end_at,
        hd_stock_at,
        a.hd_order_code, deliver_at, allow_refund, a.create_at,
        b.id as
        opid,b.order_id,b.barcode,b.total_price,b.product_name,b.specification_id,b.product_qty,b.shelf_qty,b.refund_status,b.discount_price,
        b.image,b.total_weight,b.shelf_id,
        c.store_id,c.store_name,c.store_code
        from base_order a
        left join order_product b on a.id = b.order_id
        left join order_store c on a.hd_order_code = c.hd_order_code
        inner join (select id from base_order where user_id = #{userId}
        <if test="orderType != null and orderType !=''">and order_type = #{orderType}</if>
        <if test="orderStatus != null">and status = #{orderStatus}</if>
        ) bo
        where a.id = bo.id
    </select>


    <!-- filter查询条件  -->
    <sql id="filter">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userIds != null and userIds != ''">
                and user_id in
                <foreach item="item" index="index" collection="userIds.split(',')" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="orderType != null and orderType != ''">and order_type = #{orderType}</if>
            <if test="orderStatuses != null">and status in
                <foreach collection="orderStatuses" item="status" close=")" open="(" separator=",">
                    #{status}
                </foreach>
            </if>
            <if test="orderCode !=null and orderCode != ''">and order_code like concat('%',#{orderCode},'%')</if>
            <if test="phone !=null and phone != ''">and user_phone like concat('%',#{phone},'%')</if>
            <if test="applicationType != null">and application_type = #{applicationType}</if>
            <if test="startAt != null">and create_at >= #{startAt}</if>
            <if test="endAt !=null">and create_at &lt;= #{endAt}</if>
        </trim>
    </sql>

    <!--查询订单集合-->
    <select id="findList" resultMap="orderDetails" parameterType="com.lhiot.oc.order.model.BaseOrderParam">
        select a.id, order_code as code, application_type, user_id, order_type, nickname, total_amount, delivery_amount,
        coupon_amount, amount_payable, receiving_way, status, receive_user, contact_phone, address, remark,
        delivery_end_at,
        hd_stock_at, a.hd_order_code, deliver_at, allow_refund, a.create_at,user_phone,
        b.id as
        opid,b.order_id,b.barcode,b.total_price,b.product_name,b.specification_id,b.product_qty,b.shelf_qty,b.refund_status,b.discount_price,
        b.image,b.total_weight,b.shelf_id, c.store_id,c.store_name,c.store_code
        from base_order a
        left join order_product b on a.id = b.order_id
        left join order_store c on a.hd_order_code = c.hd_order_code
        inner join (
        select id from base_order
        <include refid="filter"/>
        order by id desc
        <if test="rows != null and rows > 0 ">
            limit #{startRow} , #{rows}
        </if>
        ) bo
        where a.id = bo.id order by a.id desc
    </select>

    <!--查询订单集合总数-->
    <select id="findCount" parameterType="com.lhiot.oc.order.model.BaseOrderParam" resultType="int">
        select count(1)
        from base_order
        <include refid="filter"/>
    </select>


    <sql id="columns">
        <trim suffixOverrides=",">
            id,
            order_code as code,
            application_type,
            user_id,
            user_phone,
            order_type,
            nickname,
            total_amount,
            delivery_amount,
            coupon_amount,
            amount_payable,
            receiving_way,
            status,
            receive_user,
            contact_phone,
            address,
            remark,
            delivery_end_at,
            hd_stock_at,
            hd_order_code,
            deliver_at,
            allow_refund,
            create_at,
            pay_id
        </trim>
    </sql>

    <resultMap id="orderDetails" type="com.lhiot.oc.order.model.OrderDetailResult">
        <id column="id" javaType="Long" jdbcType="BIGINT" property="id"/>
        <result column="code" property="code"/>
        <result column="application_type" property="applicationType"/>
        <result column="order_type" property="orderType"/>
        <result column="user_id" property="userId"/>
        <result column="user_phone" property="userPhone"/>
        <result column="nickname" property="nickname"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="delivery_amount" property="deliveryAmount"/>
        <result column="coupon_amount" property="couponAmount"/>
        <result column="amount_payable" property="amountPayable"/>
        <result column="receiving_way" property="receivingWay"/>
        <result column="status" property="status"/>
        <result column="receive_user" property="receiveUser"/>
        <result column="contact_phone" property="contactPhone"/>
        <result column="address" property="address"/>
        <result column="remark" property="remark"/>
        <result column="delivery_end_at" property="deliveryEndAt"/>
        <result column="hd_stock_at" property="hdStockAt"/>
        <result column="hd_order_code" property="hdOrderCode"/>
        <result column="deliver_at" property="deliverAt"/>
        <result column="allow_refund" property="allowRefund"/>
        <result column="create_at" property="createAt"/>
        <association property="orderStore" javaType="com.lhiot.oc.order.entity.OrderStore">
            <result column="store_id" property="storeId"/>
            <result column="store_name" property="storeName"/>
            <result column="store_code" property="storeCode"/>
        </association>
        <collection property="orderProductList" ofType="com.lhiot.oc.order.entity.OrderProduct">
            <id column="opid" property="id"/>
            <result column="order_id" property="orderId"/>
            <result column="specification_id" property="specificationId"/>
            <result column="barcode" property="barcode"/>
            <result column="total_price" property="totalPrice"/>
            <result column="product_qty" property="productQty"/>
            <result column="shelf_qty" property="shelfQty"/>
            <result column="refund_status" property="refundStatus"/>
            <result column="discount_price" property="discountPrice"/>
            <result column="product_name" property="productName"/>
            <result column="image" property="image"/>
            <result column="total_weight" property="totalWeight"/>
            <result column="shelf_id" property="shelfId"/>
        </collection>
    </resultMap>

    <update id="updateStatusByCode" parameterType="map">
        update base_order set status = #{modifyStatus}
        <trim suffixOverrides=",">
            <if test="hdStockAt != null">,hd_stock_at = #{hdStockAt}</if>
            <if test="payId != null and payId !=''">,pay_id = #{payId}</if>
        </trim>
        where
        <if test="nowStatus != null">status = #{nowStatus}</if>
        <if test="nowStatus == null">((status = 'SEND_OUTING' and receiving_way = 'TO_THE_STORE') or status = 'DISPATCHING')</if>
        and order_code = #{orderCode}
    </update>

    <update id="updateStatusToReturning" parameterType="String">
        update base_order set status = 'RETURNING'
        where (status = 'WAIT_DISPATCHING' or status = 'RECEIVED') AND order_code = #{0}
    </update>

    <update id="updateStatusByPayId" parameterType="map">
        update base_order set status = #{status}
        where status = 'RETURNING' and pay_id = #{payId}
    </update>
</mapper>